name: build-and-push-image

on:
  schedule:
    - cron: '52 16 * * *'
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check if there is a new base image
        if: github.event_name != 'push'
        id: check
        run: |
          set -Eeuxo pipefail
          sudo apt install -y curl jq skopeo
          PARENT=$(skopeo inspect docker://ubuntu:23.10 | jq .Layers)
          OWN=$(skopeo inspect docker://ghcr.io/marius/github-runner-dockerfile | jq .Layers)
          OUTOFDATE=$(jq -cn "$OWN - ($OWN - $PARENT) | .==[]")
          echo "out-of-date=$OUTOFDATE" >> $GITHUB_OUTPUT
        
      - name: Checkout repository
        if: steps.check.outputs.out-of-date == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4

      - name: Log into registry
        if: steps.check.outputs.out-of-date == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.check.outputs.out-of-date == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: steps.check.outputs.out-of-date == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/marius/github-runner-dockerfile:latest
